<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hotel-BNB Search</title>
    <!-- Fontawesome CDN -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/search/search.css" />
  </head>
  <body>
    <%- include('../partials/header.ejs') %>
    <main class="hotel_search_container">
      <div class="left_container">
        <h2 class="searched_city">
          Searched city: <%=renderDataObj.searchedCity%>
        </h2>
        <small
          ><%=renderDataObj.filteredData.length %> + hotels had been
          found</small
        >
        <br />
        <!-- Data fetch from Database -->
        <% if (renderDataObj.hotelDataFromDB.length > 0) { %>
        <div>
          <% for (let i = 0; i < renderDataObj.hotelDataFromDB.length; i++) { %>
          <div class="hotel_image_from_db">
            <img
              class="hotel_image_db"
              src="<%=renderDataObj.imageHashMap.get(renderDataObj.hotelDataFromDB[i]._id)%>"
              alt="hotel image from database"
            />
            <!-- Descriptions for hotel -->
            <div class="fetched_data_desc">
              <small class="hotel_desc_address"
                ><%=renderDataObj.hotelDataFromDB[i].address%></small
              >
              <div class="hotel_desc_header">
                <h3>
                  <span>
                    <i class="fas fa-database"></i>
                  </span>
                  <%=renderDataObj.hotelDataFromDB[i].label%>
                </h3>
              </div>
              <div class="hotel_desc_detail_btn">
                <a
                  class="hotel_desc_btn"
                  href="/search/<%=renderDataObj.hotelDataFromDB[i].city%>/<%=renderDataObj.hotelDataFromDB[i]._id%>"
                >
                  View Detail
                </a>
              </div>
              <div class="hotelDB_desc_footer">
                <i class="fas fa-star hotel_score_icon">
                  <span class="hotel_score_text"
                    >Rate: <% if (renderDataObj.hotelDataFromDB[i]._score <=
                    Number(0)) { %> No rate at the moment... <% } else { %>
                    renderDataObj.hotelDataFromDB[i]._score <% } %>
                  </span>
                </i>
              </div>
            </div>
          </div>
          <hr class="each_hotel_divider" />
          <% } %>
        </div>
        <% } %>
        <!-- Data fetched from API -->
        <div class="fetched_data_container">
          <% renderDataObj.filteredData.forEach( (eachHotel) => { %>
          <div class="fetched_data">
            <!-- Image container -->
            <div class="fetched_data_img" image-id="<%=eachHotel.id%>">
              <i class="fas fa-chevron-circle-left leftArrow imgController"></i>
              <img
                class="hotelSearch_image"
                src="<%=`https://photo.hotellook.com/image_v2/limit/h${eachHotel.id}_${0}/280/180.jpg`%>"
                alt="Hotel Image"
              />
              <i
                class="fas fa-chevron-circle-right rightArrow imgController"
              ></i>
            </div>
            <div class="fetched_data_desc">
              <small class="hotel_desc_fullname"><%=eachHotel.fullName%></small>
              <div class="fetched_data_header">
                <h3><%=eachHotel.label%></h3>
              </div>
              <div class="fetched_data_detail">
                <a class="hotel_desc_btn" href="#">Under Contrcution...</a>
              </div>
              <div class="hotel_desc_footer">
                <i class="fas fa-star hotel_score_icon">
                  <span class="hotel_score_text"
                    >Rate: <%=(eachHotel._score / 100000).toFixed(3)%></span
                  >
                </i>
              </div>
            </div>
          </div>
          <hr class="each_hotel_divider" />
          <% }) %>
        </div>
      </div>
      <div class="right_container">
        <div id="map"></div>
        <script defer>
          function initalizeMap() {
            initGoogleMap();
          }
          function initGoogleMap() {
            let map;
            // these initial long and lat is from Hotel API
            let longitude = Number(
              "<%=renderDataObj.apiGoogleMapGeoLocation.location.lon%>"
            );
            let latitude = Number(
              "<%=renderDataObj.apiGoogleMapGeoLocation.location.lat%>"
            );
            let mapOption = {
              zoom: 11,
              center: {lat: latitude, lng: longitude}
            };
            map = new google.maps.Map(document.getElementById("map"), mapOption);
            const apiHotel = <%- JSON.stringify(renderDataObj.filteredData)%>;
            apiHotel.forEach((eachAPIHotel) => {
              // console.log(eachAPIHotel.location);
              const hotelLabel = eachAPIHotel.label;
              const coordLat = Number(eachAPIHotel.location.lat);
              const coordLon = Number(eachAPIHotel.location.lon);
              const coord = {
                lat: coordLat,
                lng: coordLon
              };
              const props = {
                coord : coord,
                content: hotelLabel
              };
              // end of api map marker
              addMarkerToMap(props, map);
            });
            // map for database hotels
            let lengthOfHotelsFromDB = Number('<%-renderDataObj.hotelDataFromDB.length %>');
            // console.log(lengthOfHotelsFromDB);
            if (lengthOfHotelsFromDB == 0) {
              // console.log("hello 0")
            } else {
              // console.log("Hello?");
              // console.log("Here?")
              let currentAddressDB = [];
              <% renderDataObj.hotelDataFromDB.forEach( (eachHotelData) => { %>
                  currentAddressDB = "<%=eachHotelData.address%>";
                  var geocoder = new google.maps.Geocoder();
                  if (geocoder) {
                      geocoder.geocode({
                          'address': currentAddressDB
                      }, (geoCodeResult, geoCodeStatus) => {
                          if (geoCodeStatus == google.maps.GeocoderStatus.OK) {
                              var googleMapMarker = new google.maps.Marker({
                                  position: geoCodeResult[0].geometry.location
                              ,   map: map
                              });
                              var thePropsForDBMarker = {
                                  content: "<%=eachHotelData.label%>"
                              };
                              if (thePropsForDBMarker.content) {
                                  // console.log("From DB Map");
                                  var infoWindows = new google.maps.InfoWindow({
                                      content: thePropsForDBMarker.content
                                  });
                                  googleMapMarker.addListener('mouseover', function() {
                                      infoWindows.open(map, googleMapMarker);
                                  });
                                  googleMapMarker.addListener('mouseout', function() {
                                      infoWindows.close();
                                  });
                              }
                              } else {
                                  throw ("No Result Found in Map Display DB" + geoCodeStatus);
                              }
                      });
                  }
            <% }); %>
            }
          }
          // add marker to the map
          function addMarkerToMap(props, map) {
            // console.log(props.coord);
            let marker = new google.maps.Marker({
              position: props.coord,
              map: map
            });
            if (props.content) {
              let infoWindow = new google.maps.InfoWindow({
                  content: props.content
              });
              marker.addListener('mouseover', function() {
                  infoWindow.open(map, marker);
              });
              marker.addListener('mouseout', function() {
                  infoWindow.close();
              });
            }
          }
        </script>
        <script
          async
          defer
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIYpSNFQeK5e5LluHsADjpRLnZeK78YKc&callback=initalizeMap&libraries=geometry,places&v=weekly"
        ></script>
      </div>
    </main>
    <%- include('../partials/footer.ejs') %>
    <script src="/js/search/search.js" defer></script>
    <script src="/js/root/dropdown.js" defer></script>
  </body>
</html>
